Run the entire idempotent process at any time
    See main.py / main()

It proceeds as follows:

------------------------------------------------------------------------------------------------------------------------
1. Identify and save segment_tables with required columns:
    See segment_tables.py / compute_and_save_new_segment_tables_df

1.a. find all segment_table with a name that ends with "IDENTIFIES" and does not contain 
    SEARCH_IGNORE_SEGMENT_TABLES_SET = set(["DEV","STAGING","IDENTIFIES_METADATA"])

1.b. track the following columns for each segment_table
    ALL_KEY_COLUMNS = set(["ID","ANONYMOUS_ID", "USER_ID", "EMAIL"])
    ALL_TIMESTAMP_COLUMNS = set(["RECEIVED_AT","SENT_AT","TIMESTAMP"])
    ALL_SEARCH_COLUMNS = set([*ALL_KEY_COLUMNS, *ALL_TIMESTAMP_COLUMNS,"RID"])

1.c. keep only those segment tables that don't contain at least the ALL_KEY_COLUMNS set
save the segment_table and its dash-delimited list of columns in a dict

    {'columns': 'USER_ID-ID-TIMESTAMP-SENT_AT-RECEIVED_AT-ANONYMOUS_ID-EMAIL',
    'segment_table': 'SEGMENT.IDENTIFIES_METADATA.SEGMENT.THE_CHOSEN_APP_REACT_NATIVE_PROD.IDENTIFIES'}

1.d. Store these 15 dicts into a dataframe and a csv file in local storage

------------------------------------------------------------------------------------------------------------------------
2. Identify and save the valid ellis island UUID as metadata for each segment_table's USER_ID field in SEGMENT.IDENTIFIES_METADATA
    See batch_augmented_users.py  / compute_and_save_metadata_for_all_segment_users()

2.a. Four named queries have been identified to find the ellis_island UUID for each segment_table's USER_ID
    1. rid_query 
    2. user_id_query
    3. username_query 
    4. user_id_persona_query

2.b The select phrase for all 4 queries of a segment_table is created from its dict's columns with the addition of 
two new columns {query_name}_UUID (nullable), and a {query_name}_TIMESTAMP (not nullable)

2.c. These columns are saved as new rows in SEGMENT.IDENTIFIES_METADATA.{segment_table}






 